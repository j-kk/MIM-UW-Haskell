-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParBing.y
-----------------------------------------------------------------------------


rule 42 is unused
rule 43 is unused
rule 48 is unused
rule 49 is unused
rule 50 is unused
rule 76 is unused
rule 77 is unused
rule 78 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListParam ')' Block       (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Param -> Type Ident                                (8)
	ListParam ->                                       (9)
	ListParam -> Param                                 (10)
	ListParam -> Param ',' ListParam                   (11)
	Block -> '{' ListStmt '}'                          (12)
	ListStmt ->                                        (13)
	ListStmt -> Stmt ListStmt                          (14)
	Stmt -> ';'                                        (15)
	Stmt -> Block                                      (16)
	Stmt -> Type ListItem ';'                          (17)
	Stmt -> TopDef                                     (18)
	Stmt -> 'const' Type ListItem ';'                  (19)
	Stmt -> Ident '=' Expr ';'                         (20)
	Stmt -> Ident '++' ';'                             (21)
	Stmt -> Ident '--' ';'                             (22)
	Stmt -> 'return' Expr ';'                          (23)
	Stmt -> 'return' ';'                               (24)
	Stmt -> 'while' '(' Expr ')' Stmt                  (25)
	Stmt -> 'for' '(' Ident '=' Expr 'to' Expr ')' Stmt   (26)
	Stmt -> Expr ';'                                   (27)
	Stmt -> 'break' ';'                                (28)
	Stmt -> 'continue' ';'                             (29)
	Stmt -> 'println' '(' Expr ')'                     (30)
	Stmt -> 'print' '(' Expr ')'                       (31)
	Stmt -> 'if' '(' Expr ')' Block                    (32)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (33)
	Stmt -> 'if' '(' Expr ')' Block ECond              (34)
	Item -> Ident                                      (35)
	Item -> Ident '=' Expr                             (36)
	ListItem -> Item                                   (37)
	ListItem -> Item ',' ListItem                      (38)
	ECond -> 'elif' '(' Expr ')' Block                 (39)
	ECond -> 'elif' '(' Expr ')' Block 'else' Block    (40)
	ECond -> 'elif' '(' Expr ')' Block ECond           (41)
	ListECond ->                                       (42)
	ListECond -> ECond ListECond                       (43)
	Type -> 'int'                                      (44)
	Type -> 'string'                                   (45)
	Type -> 'bool'                                     (46)
	Type -> 'void'                                     (47)
	ListType ->                                        (48)
	ListType -> Type                                   (49)
	ListType -> Type ',' ListType                      (50)
	Arg -> Expr                                        (51)
	Arg -> '&' Ident                                   (52)
	ListArg ->                                         (53)
	ListArg -> Arg                                     (54)
	ListArg -> Arg ',' ListArg                         (55)
	Expr6 -> Ident                                     (56)
	Expr6 -> Integer                                   (57)
	Expr6 -> 'True'                                    (58)
	Expr6 -> 'False'                                   (59)
	Expr6 -> Ident '(' ListArg ')'                     (60)
	Expr6 -> String                                    (61)
	Expr6 -> '(' Expr ')'                              (62)
	Expr5 -> '-' Expr6                                 (63)
	Expr5 -> '!' Expr6                                 (64)
	Expr5 -> Expr6                                     (65)
	Expr4 -> Expr4 MulOp Expr5                         (66)
	Expr4 -> Expr5                                     (67)
	Expr3 -> Expr3 AddOp Expr4                         (68)
	Expr3 -> Expr4                                     (69)
	Expr2 -> Expr2 RelOp Expr3                         (70)
	Expr2 -> Expr3                                     (71)
	Expr1 -> Expr2 '&&' Expr1                          (72)
	Expr1 -> Expr2                                     (73)
	Expr -> Expr1 '||' Expr                            (74)
	Expr -> Expr1                                      (75)
	ListExpr ->                                        (76)
	ListExpr -> Expr                                   (77)
	ListExpr -> Expr ',' ListExpr                      (78)
	AddOp -> '+'                                       (79)
	AddOp -> '-'                                       (80)
	MulOp -> '*'                                       (81)
	MulOp -> '/'                                       (82)
	MulOp -> '%'                                       (83)
	RelOp -> '<'                                       (84)
	RelOp -> '<='                                      (85)
	RelOp -> '>'                                       (86)
	RelOp -> '>='                                      (87)
	RelOp -> '=='                                      (88)
	RelOp -> '!='                                      (89)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'False'        { PT _ (TS _ 22) }
	'True'         { PT _ (TS _ 23) }
	'bool'         { PT _ (TS _ 24) }
	'break'        { PT _ (TS _ 25) }
	'const'        { PT _ (TS _ 26) }
	'continue'     { PT _ (TS _ 27) }
	'elif'         { PT _ (TS _ 28) }
	'else'         { PT _ (TS _ 29) }
	'for'          { PT _ (TS _ 30) }
	'if'           { PT _ (TS _ 31) }
	'int'          { PT _ (TS _ 32) }
	'print'        { PT _ (TS _ 33) }
	'println'      { PT _ (TS _ 34) }
	'return'       { PT _ (TS _ 35) }
	'string'       { PT _ (TS _ 36) }
	'to'           { PT _ (TS _ 37) }
	'void'         { PT _ (TS _ 38) }
	'while'        { PT _ (TS _ 39) }
	'{'            { PT _ (TS _ 40) }
	'||'           { PT _ (TS _ 41) }
	'}'            { PT _ (TS _ 42) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Param           rule  8
	ListParam       rules 9, 10, 11
	Block           rule  12
	ListStmt        rules 13, 14
	Stmt            rules 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34
	Item            rules 35, 36
	ListItem        rules 37, 38
	ECond           rules 39, 40, 41
	ListECond       rules 42, 43
	Type            rules 44, 45, 46, 47
	ListType        rules 48, 49, 50
	Arg             rules 51, 52
	ListArg         rules 53, 54, 55
	Expr6           rules 56, 57, 58, 59, 60, 61, 62
	Expr5           rules 63, 64, 65
	Expr4           rules 66, 67
	Expr3           rules 68, 69
	Expr2           rules 70, 71
	Expr1           rules 72, 73
	Expr            rules 74, 75
	ListExpr        rules 76, 77, 78
	AddOp           rules 79, 80
	MulOp           rules 81, 82, 83
	RelOp           rules 84, 85, 86, 87, 88, 89

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'to'           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 12
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Type . Ident '(' ListParam ')' Block      (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 11

State 7

	Type -> 'bool' .                                    (rule 46)

	L_Ident        reduce using rule 46


State 8

	Type -> 'int' .                                     (rule 44)

	L_Ident        reduce using rule 44


State 9

	Type -> 'string' .                                  (rule 45)

	L_Ident        reduce using rule 45


State 10

	Type -> 'void' .                                    (rule 47)

	L_Ident        reduce using rule 47


State 11

	TopDef -> Type Ident . '(' ListParam ')' Block      (rule 5)

	'('            shift, and enter state 13


State 12

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 13

	TopDef -> Type Ident '(' . ListParam ')' Block      (rule 5)

	')'            reduce using rule 9
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Param          goto state 14
	ListParam      goto state 15
	Type           goto state 16

State 14

	ListParam -> Param .                                (rule 10)
	ListParam -> Param . ',' ListParam                  (rule 11)

	')'            reduce using rule 10
	','            shift, and enter state 19


State 15

	TopDef -> Type Ident '(' ListParam . ')' Block      (rule 5)

	')'            shift, and enter state 18


State 16

	Param -> Type . Ident                               (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 17

	Param -> Type Ident .                               (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 18

	TopDef -> Type Ident '(' ListParam ')' . Block      (rule 5)

	'{'            shift, and enter state 22

	Block          goto state 21

State 19

	ListParam -> Param ',' . ListParam                  (rule 11)

	')'            reduce using rule 9
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Param          goto state 14
	ListParam      goto state 20
	Type           goto state 16

State 20

	ListParam -> Param ',' ListParam .                  (rule 11)

	')'            reduce using rule 11


State 21

	TopDef -> Type Ident '(' ListParam ')' Block .      (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'False'        reduce using rule 5
	'True'         reduce using rule 5
	'bool'         reduce using rule 5
	'break'        reduce using rule 5
	'const'        reduce using rule 5
	'continue'     reduce using rule 5
	'for'          reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'print'        reduce using rule 5
	'println'      reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 22

	Block -> '{' . ListStmt '}'                         (rule 12)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	'bool'         shift, and enter state 7
	'break'        shift, and enter state 44
	'const'        shift, and enter state 45
	'continue'     shift, and enter state 46
	'for'          shift, and enter state 47
	'if'           shift, and enter state 48
	'int'          shift, and enter state 8
	'print'        shift, and enter state 49
	'println'      shift, and enter state 50
	'return'       shift, and enter state 51
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	'while'        shift, and enter state 52
	'{'            shift, and enter state 22
	'}'            reduce using rule 13
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	TopDef         goto state 26
	Block          goto state 27
	ListStmt       goto state 28
	Stmt           goto state 29
	Type           goto state 30
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 37

State 23

	Stmt -> Ident . '=' Expr ';'                        (rule 20)
	Stmt -> Ident . '++' ';'                            (rule 21)
	Stmt -> Ident . '--' ';'                            (rule 22)
	Expr6 -> Ident .                                    (rule 56)
	Expr6 -> Ident . '(' ListArg ')'                    (rule 60)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            shift, and enter state 91
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	'++'           shift, and enter state 92
	'-'            reduce using rule 56
	'--'           shift, and enter state 93
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            shift, and enter state 94
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56


State 24

	Expr6 -> Integer .                                  (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'to'           reduce using rule 57
	'||'           reduce using rule 57


State 25

	Expr6 -> String .                                   (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'to'           reduce using rule 61
	'||'           reduce using rule 61


State 26

	Stmt -> TopDef .                                    (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'False'        reduce using rule 18
	'True'         reduce using rule 18
	'bool'         reduce using rule 18
	'break'        reduce using rule 18
	'const'        reduce using rule 18
	'continue'     reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'print'        reduce using rule 18
	'println'      reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 27

	Stmt -> Block .                                     (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'False'        reduce using rule 16
	'True'         reduce using rule 16
	'bool'         reduce using rule 16
	'break'        reduce using rule 16
	'const'        reduce using rule 16
	'continue'     reduce using rule 16
	'for'          reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'print'        reduce using rule 16
	'println'      reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 28

	Block -> '{' ListStmt . '}'                         (rule 12)

	'}'            shift, and enter state 90


State 29

	ListStmt -> Stmt . ListStmt                         (rule 14)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	'bool'         shift, and enter state 7
	'break'        shift, and enter state 44
	'const'        shift, and enter state 45
	'continue'     shift, and enter state 46
	'for'          shift, and enter state 47
	'if'           shift, and enter state 48
	'int'          shift, and enter state 8
	'print'        shift, and enter state 49
	'println'      shift, and enter state 50
	'return'       shift, and enter state 51
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	'while'        shift, and enter state 52
	'{'            shift, and enter state 22
	'}'            reduce using rule 13
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	TopDef         goto state 26
	Block          goto state 27
	ListStmt       goto state 89
	Stmt           goto state 29
	Type           goto state 30
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 37

State 30

	TopDef -> Type . Ident '(' ListParam ')' Block      (rule 5)
	Stmt -> Type . ListItem ';'                         (rule 17)

	L_Ident        shift, and enter state 2

	Ident          goto state 86
	Item           goto state 87
	ListItem       goto state 88

State 31

	Expr5 -> Expr6 .                                    (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'to'           reduce using rule 65
	'||'           reduce using rule 65


State 32

	Expr4 -> Expr5 .                                    (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'to'           reduce using rule 67
	'||'           reduce using rule 67


State 33

	Expr4 -> Expr4 . MulOp Expr5                        (rule 66)
	Expr3 -> Expr4 .                                    (rule 69)

	'!='           reduce using rule 69
	'%'            shift, and enter state 83
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            shift, and enter state 84
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            shift, and enter state 85
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'to'           reduce using rule 69
	'||'           reduce using rule 69

	MulOp          goto state 82

State 34

	Expr3 -> Expr3 . AddOp Expr4                        (rule 68)
	Expr2 -> Expr3 .                                    (rule 71)

	'!='           reduce using rule 71
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'+'            shift, and enter state 80
	','            reduce using rule 71
	'-'            shift, and enter state 81
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'to'           reduce using rule 71
	'||'           reduce using rule 71

	AddOp          goto state 79

State 35

	Expr2 -> Expr2 . RelOp Expr3                        (rule 70)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 72)
	Expr1 -> Expr2 .                                    (rule 73)

	'!='           shift, and enter state 72
	'&&'           shift, and enter state 73
	')'            reduce using rule 73
	','            reduce using rule 73
	';'            reduce using rule 73
	'<'            shift, and enter state 74
	'<='           shift, and enter state 75
	'=='           shift, and enter state 76
	'>'            shift, and enter state 77
	'>='           shift, and enter state 78
	'to'           reduce using rule 73
	'||'           reduce using rule 73

	RelOp          goto state 71

State 36

	Expr -> Expr1 . '||' Expr                           (rule 74)
	Expr -> Expr1 .                                     (rule 75)

	')'            reduce using rule 75
	','            reduce using rule 75
	';'            reduce using rule 75
	'to'           reduce using rule 75
	'||'           shift, and enter state 70


State 37

	Stmt -> Expr . ';'                                  (rule 27)

	';'            shift, and enter state 69


State 38

	Expr5 -> '!' . Expr6                                (rule 64)

	'('            shift, and enter state 39
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 68

State 39

	Expr6 -> '(' . Expr ')'                             (rule 62)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 67

State 40

	Expr5 -> '-' . Expr6                                (rule 63)

	'('            shift, and enter state 39
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 66

State 41

	Stmt -> ';' .                                       (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'False'        reduce using rule 15
	'True'         reduce using rule 15
	'bool'         reduce using rule 15
	'break'        reduce using rule 15
	'const'        reduce using rule 15
	'continue'     reduce using rule 15
	'for'          reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'print'        reduce using rule 15
	'println'      reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'void'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15


State 42

	Expr6 -> 'False' .                                  (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'to'           reduce using rule 59
	'||'           reduce using rule 59


State 43

	Expr6 -> 'True' .                                   (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'to'           reduce using rule 58
	'||'           reduce using rule 58


State 44

	Stmt -> 'break' . ';'                               (rule 28)

	';'            shift, and enter state 65


State 45

	Stmt -> 'const' . Type ListItem ';'                 (rule 19)

	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Type           goto state 64

State 46

	Stmt -> 'continue' . ';'                            (rule 29)

	';'            shift, and enter state 63


State 47

	Stmt -> 'for' . '(' Ident '=' Expr 'to' Expr ')' Stmt    (rule 26)

	'('            shift, and enter state 62


State 48

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 32)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 33)
	Stmt -> 'if' . '(' Expr ')' Block ECond             (rule 34)

	'('            shift, and enter state 61


State 49

	Stmt -> 'print' . '(' Expr ')'                      (rule 31)

	'('            shift, and enter state 60


State 50

	Stmt -> 'println' . '(' Expr ')'                    (rule 30)

	'('            shift, and enter state 59


State 51

	Stmt -> 'return' . Expr ';'                         (rule 23)
	Stmt -> 'return' . ';'                              (rule 24)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 58
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 57

State 52

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 25)

	'('            shift, and enter state 55


State 53

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'to'           reduce using rule 2
	'||'           reduce using rule 2


State 54

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'to'           reduce using rule 3
	'||'           reduce using rule 3


State 55

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 25)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 118

State 56

	Expr6 -> Ident .                                    (rule 56)
	Expr6 -> Ident . '(' ListArg ')'                    (rule 60)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            shift, and enter state 91
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'to'           reduce using rule 56
	'||'           reduce using rule 56


State 57

	Stmt -> 'return' Expr . ';'                         (rule 23)

	';'            shift, and enter state 117


State 58

	Stmt -> 'return' ';' .                              (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'False'        reduce using rule 24
	'True'         reduce using rule 24
	'bool'         reduce using rule 24
	'break'        reduce using rule 24
	'const'        reduce using rule 24
	'continue'     reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'print'        reduce using rule 24
	'println'      reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 59

	Stmt -> 'println' '(' . Expr ')'                    (rule 30)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 116

State 60

	Stmt -> 'print' '(' . Expr ')'                      (rule 31)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 115

State 61

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 32)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 33)
	Stmt -> 'if' '(' . Expr ')' Block ECond             (rule 34)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 114

State 62

	Stmt -> 'for' '(' . Ident '=' Expr 'to' Expr ')' Stmt    (rule 26)

	L_Ident        shift, and enter state 2

	Ident          goto state 113

State 63

	Stmt -> 'continue' ';' .                            (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'False'        reduce using rule 29
	'True'         reduce using rule 29
	'bool'         reduce using rule 29
	'break'        reduce using rule 29
	'const'        reduce using rule 29
	'continue'     reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'print'        reduce using rule 29
	'println'      reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 64

	Stmt -> 'const' Type . ListItem ';'                 (rule 19)

	L_Ident        shift, and enter state 2

	Ident          goto state 111
	Item           goto state 87
	ListItem       goto state 112

State 65

	Stmt -> 'break' ';' .                               (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'False'        reduce using rule 28
	'True'         reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'const'        reduce using rule 28
	'continue'     reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'print'        reduce using rule 28
	'println'      reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 66

	Expr5 -> '-' Expr6 .                                (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'to'           reduce using rule 63
	'||'           reduce using rule 63


State 67

	Expr6 -> '(' Expr . ')'                             (rule 62)

	')'            shift, and enter state 110


State 68

	Expr5 -> '!' Expr6 .                                (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'to'           reduce using rule 64
	'||'           reduce using rule 64


State 69

	Stmt -> Expr ';' .                                  (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'False'        reduce using rule 27
	'True'         reduce using rule 27
	'bool'         reduce using rule 27
	'break'        reduce using rule 27
	'const'        reduce using rule 27
	'continue'     reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'print'        reduce using rule 27
	'println'      reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 70

	Expr -> Expr1 '||' . Expr                           (rule 74)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 109

State 71

	Expr2 -> Expr2 RelOp . Expr3                        (rule 70)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 108

State 72

	RelOp -> '!=' .                                     (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'False'        reduce using rule 89
	'True'         reduce using rule 89
	L_Ident        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89


State 73

	Expr1 -> Expr2 '&&' . Expr1                         (rule 72)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 107

State 74

	RelOp -> '<' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'False'        reduce using rule 84
	'True'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 75

	RelOp -> '<=' .                                     (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'False'        reduce using rule 85
	'True'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 76

	RelOp -> '==' .                                     (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'False'        reduce using rule 88
	'True'         reduce using rule 88
	L_Ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 77

	RelOp -> '>' .                                      (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'False'        reduce using rule 86
	'True'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 78

	RelOp -> '>=' .                                     (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'False'        reduce using rule 87
	'True'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 79

	Expr3 -> Expr3 AddOp . Expr4                        (rule 68)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 106

State 80

	AddOp -> '+' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'False'        reduce using rule 79
	'True'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 81

	AddOp -> '-' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'False'        reduce using rule 80
	'True'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 82

	Expr4 -> Expr4 MulOp . Expr5                        (rule 66)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 105

State 83

	MulOp -> '%' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'False'        reduce using rule 83
	'True'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 84

	MulOp -> '*' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'False'        reduce using rule 81
	'True'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 85

	MulOp -> '/' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'False'        reduce using rule 82
	'True'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 86

	TopDef -> Type Ident . '(' ListParam ')' Block      (rule 5)
	Item -> Ident .                                     (rule 35)
	Item -> Ident . '=' Expr                            (rule 36)

	'('            shift, and enter state 13
	','            reduce using rule 35
	';'            reduce using rule 35
	'='            shift, and enter state 104


State 87

	ListItem -> Item .                                  (rule 37)
	ListItem -> Item . ',' ListItem                     (rule 38)

	','            shift, and enter state 103
	';'            reduce using rule 37


State 88

	Stmt -> Type ListItem . ';'                         (rule 17)

	';'            shift, and enter state 102


State 89

	ListStmt -> Stmt ListStmt .                         (rule 14)

	'}'            reduce using rule 14


State 90

	Block -> '{' ListStmt '}' .                         (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'False'        reduce using rule 12
	'True'         reduce using rule 12
	'bool'         reduce using rule 12
	'break'        reduce using rule 12
	'const'        reduce using rule 12
	'continue'     reduce using rule 12
	'elif'         reduce using rule 12
	'else'         reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'print'        reduce using rule 12
	'println'      reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'void'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 91

	Expr6 -> Ident '(' . ListArg ')'                    (rule 60)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 101
	'('            shift, and enter state 39
	')'            reduce using rule 53
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Arg            goto state 98
	ListArg        goto state 99
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 100

State 92

	Stmt -> Ident '++' . ';'                            (rule 21)

	';'            shift, and enter state 97


State 93

	Stmt -> Ident '--' . ';'                            (rule 22)

	';'            shift, and enter state 96


State 94

	Stmt -> Ident '=' . Expr ';'                        (rule 20)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 95

State 95

	Stmt -> Ident '=' Expr . ';'                        (rule 20)

	';'            shift, and enter state 130


State 96

	Stmt -> Ident '--' ';' .                            (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'False'        reduce using rule 22
	'True'         reduce using rule 22
	'bool'         reduce using rule 22
	'break'        reduce using rule 22
	'const'        reduce using rule 22
	'continue'     reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'print'        reduce using rule 22
	'println'      reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 97

	Stmt -> Ident '++' ';' .                            (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'False'        reduce using rule 21
	'True'         reduce using rule 21
	'bool'         reduce using rule 21
	'break'        reduce using rule 21
	'const'        reduce using rule 21
	'continue'     reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'print'        reduce using rule 21
	'println'      reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 98

	ListArg -> Arg .                                    (rule 54)
	ListArg -> Arg . ',' ListArg                        (rule 55)

	')'            reduce using rule 54
	','            shift, and enter state 129


State 99

	Expr6 -> Ident '(' ListArg . ')'                    (rule 60)

	')'            shift, and enter state 128


State 100

	Arg -> Expr .                                       (rule 51)

	')'            reduce using rule 51
	','            reduce using rule 51


State 101

	Arg -> '&' . Ident                                  (rule 52)

	L_Ident        shift, and enter state 2

	Ident          goto state 127

State 102

	Stmt -> Type ListItem ';' .                         (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'False'        reduce using rule 17
	'True'         reduce using rule 17
	'bool'         reduce using rule 17
	'break'        reduce using rule 17
	'const'        reduce using rule 17
	'continue'     reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'print'        reduce using rule 17
	'println'      reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 103

	ListItem -> Item ',' . ListItem                     (rule 38)

	L_Ident        shift, and enter state 2

	Ident          goto state 111
	Item           goto state 87
	ListItem       goto state 126

State 104

	Item -> Ident '=' . Expr                            (rule 36)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 125

State 105

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'to'           reduce using rule 66
	'||'           reduce using rule 66


State 106

	Expr4 -> Expr4 . MulOp Expr5                        (rule 66)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 68)

	'!='           reduce using rule 68
	'%'            shift, and enter state 83
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            shift, and enter state 84
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            shift, and enter state 85
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'to'           reduce using rule 68
	'||'           reduce using rule 68

	MulOp          goto state 82

State 107

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 72)

	')'            reduce using rule 72
	','            reduce using rule 72
	';'            reduce using rule 72
	'to'           reduce using rule 72
	'||'           reduce using rule 72


State 108

	Expr3 -> Expr3 . AddOp Expr4                        (rule 68)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 70)

	'!='           reduce using rule 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'+'            shift, and enter state 80
	','            reduce using rule 70
	'-'            shift, and enter state 81
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'to'           reduce using rule 70
	'||'           reduce using rule 70

	AddOp          goto state 79

State 109

	Expr -> Expr1 '||' Expr .                           (rule 74)

	')'            reduce using rule 74
	','            reduce using rule 74
	';'            reduce using rule 74
	'to'           reduce using rule 74


State 110

	Expr6 -> '(' Expr ')' .                             (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'to'           reduce using rule 62
	'||'           reduce using rule 62


State 111

	Item -> Ident .                                     (rule 35)
	Item -> Ident . '=' Expr                            (rule 36)

	','            reduce using rule 35
	';'            reduce using rule 35
	'='            shift, and enter state 104


State 112

	Stmt -> 'const' Type ListItem . ';'                 (rule 19)

	';'            shift, and enter state 124


State 113

	Stmt -> 'for' '(' Ident . '=' Expr 'to' Expr ')' Stmt    (rule 26)

	'='            shift, and enter state 123


State 114

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 32)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 33)
	Stmt -> 'if' '(' Expr . ')' Block ECond             (rule 34)

	')'            shift, and enter state 122


State 115

	Stmt -> 'print' '(' Expr . ')'                      (rule 31)

	')'            shift, and enter state 121


State 116

	Stmt -> 'println' '(' Expr . ')'                    (rule 30)

	')'            shift, and enter state 120


State 117

	Stmt -> 'return' Expr ';' .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'False'        reduce using rule 23
	'True'         reduce using rule 23
	'bool'         reduce using rule 23
	'break'        reduce using rule 23
	'const'        reduce using rule 23
	'continue'     reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'print'        reduce using rule 23
	'println'      reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 118

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 25)

	')'            shift, and enter state 119


State 119

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 25)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	'bool'         shift, and enter state 7
	'break'        shift, and enter state 44
	'const'        shift, and enter state 45
	'continue'     shift, and enter state 46
	'for'          shift, and enter state 47
	'if'           shift, and enter state 48
	'int'          shift, and enter state 8
	'print'        shift, and enter state 49
	'println'      shift, and enter state 50
	'return'       shift, and enter state 51
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	'while'        shift, and enter state 52
	'{'            shift, and enter state 22
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	TopDef         goto state 26
	Block          goto state 27
	Stmt           goto state 134
	Type           goto state 30
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 37

State 120

	Stmt -> 'println' '(' Expr ')' .                    (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'False'        reduce using rule 30
	'True'         reduce using rule 30
	'bool'         reduce using rule 30
	'break'        reduce using rule 30
	'const'        reduce using rule 30
	'continue'     reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'print'        reduce using rule 30
	'println'      reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 121

	Stmt -> 'print' '(' Expr ')' .                      (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'False'        reduce using rule 31
	'True'         reduce using rule 31
	'bool'         reduce using rule 31
	'break'        reduce using rule 31
	'const'        reduce using rule 31
	'continue'     reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'print'        reduce using rule 31
	'println'      reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 122

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 32)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 33)
	Stmt -> 'if' '(' Expr ')' . Block ECond             (rule 34)

	'{'            shift, and enter state 22

	Block          goto state 133

State 123

	Stmt -> 'for' '(' Ident '=' . Expr 'to' Expr ')' Stmt    (rule 26)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 132

State 124

	Stmt -> 'const' Type ListItem ';' .                 (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'False'        reduce using rule 19
	'True'         reduce using rule 19
	'bool'         reduce using rule 19
	'break'        reduce using rule 19
	'const'        reduce using rule 19
	'continue'     reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'print'        reduce using rule 19
	'println'      reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 125

	Item -> Ident '=' Expr .                            (rule 36)

	','            reduce using rule 36
	';'            reduce using rule 36


State 126

	ListItem -> Item ',' ListItem .                     (rule 38)

	';'            reduce using rule 38


State 127

	Arg -> '&' Ident .                                  (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52


State 128

	Expr6 -> Ident '(' ListArg ')' .                    (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'to'           reduce using rule 60
	'||'           reduce using rule 60


State 129

	ListArg -> Arg ',' . ListArg                        (rule 55)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 101
	'('            shift, and enter state 39
	')'            reduce using rule 53
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Arg            goto state 98
	ListArg        goto state 131
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 100

State 130

	Stmt -> Ident '=' Expr ';' .                        (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'False'        reduce using rule 20
	'True'         reduce using rule 20
	'bool'         reduce using rule 20
	'break'        reduce using rule 20
	'const'        reduce using rule 20
	'continue'     reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'print'        reduce using rule 20
	'println'      reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 131

	ListArg -> Arg ',' ListArg .                        (rule 55)

	')'            reduce using rule 55


State 132

	Stmt -> 'for' '(' Ident '=' Expr . 'to' Expr ')' Stmt    (rule 26)

	'to'           shift, and enter state 138


State 133

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 32)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 33)
	Stmt -> 'if' '(' Expr ')' Block . ECond             (rule 34)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'False'        reduce using rule 32
	'True'         reduce using rule 32
	'bool'         reduce using rule 32
	'break'        reduce using rule 32
	'const'        reduce using rule 32
	'continue'     reduce using rule 32
	'elif'         shift, and enter state 136
	'else'         shift, and enter state 137
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'print'        reduce using rule 32
	'println'      reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32

	ECond          goto state 135

State 134

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'False'        reduce using rule 25
	'True'         reduce using rule 25
	'bool'         reduce using rule 25
	'break'        reduce using rule 25
	'const'        reduce using rule 25
	'continue'     reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'print'        reduce using rule 25
	'println'      reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 135

	Stmt -> 'if' '(' Expr ')' Block ECond .             (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'False'        reduce using rule 34
	'True'         reduce using rule 34
	'bool'         reduce using rule 34
	'break'        reduce using rule 34
	'const'        reduce using rule 34
	'continue'     reduce using rule 34
	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'print'        reduce using rule 34
	'println'      reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 136

	ECond -> 'elif' . '(' Expr ')' Block                (rule 39)
	ECond -> 'elif' . '(' Expr ')' Block 'else' Block    (rule 40)
	ECond -> 'elif' . '(' Expr ')' Block ECond          (rule 41)

	'('            shift, and enter state 141


State 137

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 33)

	'{'            shift, and enter state 22

	Block          goto state 140

State 138

	Stmt -> 'for' '(' Ident '=' Expr 'to' . Expr ')' Stmt    (rule 26)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 139

State 139

	Stmt -> 'for' '(' Ident '=' Expr 'to' Expr . ')' Stmt    (rule 26)

	')'            shift, and enter state 143


State 140

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'False'        reduce using rule 33
	'True'         reduce using rule 33
	'bool'         reduce using rule 33
	'break'        reduce using rule 33
	'const'        reduce using rule 33
	'continue'     reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'print'        reduce using rule 33
	'println'      reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 141

	ECond -> 'elif' '(' . Expr ')' Block                (rule 39)
	ECond -> 'elif' '(' . Expr ')' Block 'else' Block    (rule 40)
	ECond -> 'elif' '(' . Expr ')' Block ECond          (rule 41)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 56
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 142

State 142

	ECond -> 'elif' '(' Expr . ')' Block                (rule 39)
	ECond -> 'elif' '(' Expr . ')' Block 'else' Block    (rule 40)
	ECond -> 'elif' '(' Expr . ')' Block ECond          (rule 41)

	')'            shift, and enter state 145


State 143

	Stmt -> 'for' '(' Ident '=' Expr 'to' Expr ')' . Stmt    (rule 26)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'False'        shift, and enter state 42
	'True'         shift, and enter state 43
	'bool'         shift, and enter state 7
	'break'        shift, and enter state 44
	'const'        shift, and enter state 45
	'continue'     shift, and enter state 46
	'for'          shift, and enter state 47
	'if'           shift, and enter state 48
	'int'          shift, and enter state 8
	'print'        shift, and enter state 49
	'println'      shift, and enter state 50
	'return'       shift, and enter state 51
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	'while'        shift, and enter state 52
	'{'            shift, and enter state 22
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 53
	L_quoted       shift, and enter state 54

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	TopDef         goto state 26
	Block          goto state 27
	Stmt           goto state 144
	Type           goto state 30
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 37

State 144

	Stmt -> 'for' '(' Ident '=' Expr 'to' Expr ')' Stmt .    (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'False'        reduce using rule 26
	'True'         reduce using rule 26
	'bool'         reduce using rule 26
	'break'        reduce using rule 26
	'const'        reduce using rule 26
	'continue'     reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'print'        reduce using rule 26
	'println'      reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 145

	ECond -> 'elif' '(' Expr ')' . Block                (rule 39)
	ECond -> 'elif' '(' Expr ')' . Block 'else' Block    (rule 40)
	ECond -> 'elif' '(' Expr ')' . Block ECond          (rule 41)

	'{'            shift, and enter state 22

	Block          goto state 146

State 146

	ECond -> 'elif' '(' Expr ')' Block .                (rule 39)
	ECond -> 'elif' '(' Expr ')' Block . 'else' Block    (rule 40)
	ECond -> 'elif' '(' Expr ')' Block . ECond          (rule 41)

	'!'            reduce using rule 39
	'('            reduce using rule 39
	'-'            reduce using rule 39
	';'            reduce using rule 39
	'False'        reduce using rule 39
	'True'         reduce using rule 39
	'bool'         reduce using rule 39
	'break'        reduce using rule 39
	'const'        reduce using rule 39
	'continue'     reduce using rule 39
	'elif'         shift, and enter state 136
	'else'         shift, and enter state 148
	'for'          reduce using rule 39
	'if'           reduce using rule 39
	'int'          reduce using rule 39
	'print'        reduce using rule 39
	'println'      reduce using rule 39
	'return'       reduce using rule 39
	'string'       reduce using rule 39
	'void'         reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_Ident        reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39

	ECond          goto state 147

State 147

	ECond -> 'elif' '(' Expr ')' Block ECond .          (rule 41)

	'!'            reduce using rule 41
	'('            reduce using rule 41
	'-'            reduce using rule 41
	';'            reduce using rule 41
	'False'        reduce using rule 41
	'True'         reduce using rule 41
	'bool'         reduce using rule 41
	'break'        reduce using rule 41
	'const'        reduce using rule 41
	'continue'     reduce using rule 41
	'for'          reduce using rule 41
	'if'           reduce using rule 41
	'int'          reduce using rule 41
	'print'        reduce using rule 41
	'println'      reduce using rule 41
	'return'       reduce using rule 41
	'string'       reduce using rule 41
	'void'         reduce using rule 41
	'while'        reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	L_Ident        reduce using rule 41
	L_integ        reduce using rule 41
	L_quoted       reduce using rule 41


State 148

	ECond -> 'elif' '(' Expr ')' Block 'else' . Block    (rule 40)

	'{'            shift, and enter state 22

	Block          goto state 149

State 149

	ECond -> 'elif' '(' Expr ')' Block 'else' Block .    (rule 40)

	'!'            reduce using rule 40
	'('            reduce using rule 40
	'-'            reduce using rule 40
	';'            reduce using rule 40
	'False'        reduce using rule 40
	'True'         reduce using rule 40
	'bool'         reduce using rule 40
	'break'        reduce using rule 40
	'const'        reduce using rule 40
	'continue'     reduce using rule 40
	'for'          reduce using rule 40
	'if'           reduce using rule 40
	'int'          reduce using rule 40
	'print'        reduce using rule 40
	'println'      reduce using rule 40
	'return'       reduce using rule 40
	'string'       reduce using rule 40
	'void'         reduce using rule 40
	'while'        reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	L_Ident        reduce using rule 40
	L_integ        reduce using rule 40
	L_quoted       reduce using rule 40


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 90
Number of terminals: 45
Number of non-terminals: 31
Number of states: 150
